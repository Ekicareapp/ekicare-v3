// Script pour activer le trigger de cr√©ation automatique de clients
// Ce script ex√©cute le SQL dans Supabase

const { createClient } = require('@supabase/supabase-js');

// Configuration Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå Variables d\'environnement Supabase manquantes');
  console.log('Assurez-vous que NEXT_PUBLIC_SUPABASE_URL et SUPABASE_SERVICE_ROLE_KEY sont d√©finies');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function activateClientsTrigger() {
  console.log('üîß Activation du trigger de cr√©ation automatique de clients');
  console.log('============================================================');

  try {
    // Lire le fichier SQL
    const fs = require('fs');
    const path = require('path');
    const sqlFile = path.join(__dirname, 'migrations', 'create_client_relation_trigger.sql');
    
    if (!fs.existsSync(sqlFile)) {
      console.error('‚ùå Fichier SQL non trouv√©:', sqlFile);
      return;
    }

    const sqlContent = fs.readFileSync(sqlFile, 'utf8');
    console.log('üìÑ Contenu du script SQL:');
    console.log('------------------------');
    console.log(sqlContent);
    console.log('------------------------');

    // Ex√©cuter le SQL
    console.log('\nüöÄ Ex√©cution du script SQL...');
    const { data, error } = await supabase.rpc('exec_sql', { sql: sqlContent });

    if (error) {
      console.error('‚ùå Erreur lors de l\'ex√©cution du SQL:', error);
      return;
    }

    console.log('‚úÖ Trigger activ√© avec succ√®s !');
    console.log('\nüìã Le trigger va maintenant:');
    console.log('- Se d√©clencher automatiquement quand un RDV passe en "confirmed"');
    console.log('- Cr√©er une entr√©e dans la table "mes_clients"');
    console.log('- √âviter les doublons si la relation existe d√©j√†');

  } catch (error) {
    console.error('‚ùå Erreur:', error);
  }
}

// Ex√©cuter l'activation
activateClientsTrigger();









